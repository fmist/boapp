version: "3"
services:

  backend:
    container_name: backend
    image: 'backend'
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/bodb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin

  mysql:
    container_name: mysql
    image: mysql
    environment:
        MYSQL_ROOT_PASSWORD: admin
        MYSQL_DATABASE: bodb
        MYSQL_USER: admin
        MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - my-db-volume:/var/lib/mysql
#    restart: unless-stopped

#  frontend:

#  frontend:
#    build:
#      context: src/main/frontend
#      dockerfile: Dockerfile
#    ports:
#      - "3000:3000"
#    image: 'frontend'
#    depends_on:
#      - backend

#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181"
#    depends_on:
#      - db
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#    ports:
#      - "9092:9092"
#      - "9997:9997"
#
#  kafka-ui:
#    container_name: kafka-ui
#    image: provectuslabs/kafka-ui:latest
#    ports:
#      - "8082:8080"
#    environment:
#      DYNAMIC_CONFIG_ENABLED: true
#    depends_on:
#      - kafka
volumes:
  my-db-volume: